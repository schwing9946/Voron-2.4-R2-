# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0 and FLY SB2040V2/V1
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader" "25 MHz crystal"
# and "USB (on PA11/PA12)", "CAN bus (on PD0/PD1)" or Serial (on USART1 PA10/PA9).

# This config is ported from V1.0 boards
# 
# See docs/Config_Reference.md for a description of parameters.

#####################################################################
# 	Additional active Config Files
#####################################################################

[include mainsail.cfg]
#[include ebb-sb-rp2040-canbus-v1.0.cfg]     #canbus_uuid: 79d0b0772c70

#####################################################################
# 	MCU and Printer info
#####################################################################

[mcu]
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
canbus_uuid: f56dd8519ed4
##--------------------------------------------------------------------

[mcu EBBCan]
canbus_uuid: 79d0b0772c70

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000    			#Max 4000
max_z_velocity: 25 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[exclude_object]

#####################################################################
# 	Pin Mapping
#####################################################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

#####################################################################
# 	Temp Monitoring
#####################################################################

[temperature_sensor Manta-M8PV2]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 80

[temperature_sensor CB2]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio28


#sensor_type: Generic 3950
#sensor_pin: EBBCan:gpio28

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## M1 (B)
[stepper_x]
step_pin: PE6
dir_pin: !PE5
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan:gpio24
position_endstop:0
position_max: 350 #235
homing_speed: 50 #Max 100

[tmc2209 stepper_x]
uart_pin: PC13
#diag_pin: PF4 
run_current: 0.800
stealthchop_threshold: 999999

## M2(A)
[stepper_y]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^PF3
position_endstop:0
position_max: 350 #235
homing_speed: 50 # Max 100

[tmc2209 stepper_y]
uart_pin: PE3
#diag_pin: PF3
run_current: 0.8
stealthchop_threshold: 999999

#####################################################################
# 	Z Stepper Settings
#####################################################################

## M5(Z0 - FL)
[stepper_z]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
microsteps: 16
rotation_distance: 8 #was set to 40
#endstop_pin: EBBCan:gpio22
endstop_pin: probe:z_virtual_endstop # use cartographer as virtual endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0
#position_endstop: 0
position_max: 270 #was 240
position_min: -5.0
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PG14
#diag_pin: PF2
run_current: 0.8
stealthchop_threshold: 999999

##	M6(Z1 - RL)
[stepper_z1]
step_pin: PG9
dir_pin: !PD7
enable_pin: !PG11
microsteps: 16
rotation_distance: 8 #was set to 40
endstop_pin: probe:z_virtual_endstop # use cartographer as virtual endstop
#endstop_pin: EBBCan:gpio22 #needs to be changed to tap
#position_endstop: 0
#position_max: 270 #was 240
#position_min: -5.0
#homing_speed: 8
#second_homing_speed: 3
#homing_retract_dist: 3

[tmc2209 stepper_z1]
uart_pin: PG10
#diag_pin: PF1
run_current: 0.8
stealthchop_threshold: 999999

##	M7(Z2 - RR) - z3
[stepper_z2]
step_pin: PD4
dir_pin: PD3
enable_pin: !PD6
microsteps: 16
rotation_distance: 8 #was set to 40
#endstop_pin: EBBCan:gpio22 #needs to be changed to tap
endstop_pin: probe:z_virtual_endstop # use cartographer as virtual endstop
#position_endstop: 0
#position_max: 270 #was 240
#position_min: -5.0
#homing_speed: 8
#second_homing_speed: 3
#homing_retract_dist: 3

[tmc2209 stepper_z2]
uart_pin: PD5
#diag_pin: PF1
run_current: 0.8
stealthchop_threshold: 999999

##	M8(Z3 - FR)
[stepper_z3]
step_pin: PC7
dir_pin: !PC8
enable_pin: !PD2
microsteps: 16
rotation_distance: 8 #was set to 40
#endstop_pin: EBBCan:gpio22 #needs to be changed to tap
endstop_pin: probe:z_virtual_endstop # use cartographer as virtual endstop
#position_endstop: 0
#position_max: 270 #was 240
#position_min: -5.0
#homing_speed: 8
#second_homing_speed: 3
#homing_retract_dist: 3

[tmc2209 stepper_z3]
uart_pin: PC6
#diag_pin: PF1
run_current: 0.8
stealthchop_threshold: 999999

#####################################################################
# 	Extruder
#####################################################################

[extruder]
step_pin: EBBCan:gpio18
dir_pin: !EBBCan:gpio19
enable_pin: !EBBCan:gpio17
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
sensor_type: PT1000 #EPCOS 100K B57560G104F
sensor_pin: EBBCan:gpio27
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.650
stealthchop_threshold: 999999

#[temperature_sensor Extruder]
#ensor_type: PT1000      
#sensor_mcu: EBBCan
#sensor_pin: EBBCan:gpio27
#min_temp: 0                       
#max_temp: 100

[fan]
pin: EBBCan:gpio13

[heater_fan hotend_fan]
pin: EBBCan:gpio14
heater: extruder
heater_temp: 50.0

[fan_generic 4W_FAN0]
pin: EBBCan:gpio15
tachometer_pin: EBBCan:gpio12
#tachometer_ppr: 1

[neopixel hotend_rgb]
pin: EBBCan:gpio16

#[filament_switch_sensor material_0]
#switch_pin: PC1

#[filament_switch_sensor material_1]
#switch_pin: PC2

#####################################################################
# 	Accelerometer
#####################################################################

[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - HE1
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: PB1
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[idle_timeout]
timeout: 7200
 
#####################################################################
# 	Fan Control
#####################################################################

[heater_fan Electronics1]
##	Electronics Bay - Intake
pin: PF6
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 0.3
heater: heater_bed
heater_temp: 20
fan_speed: 0.6

[heater_fan Electronics2]
##	Electronics Bay - Intake
pin: PF8
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 0.3
heater: heater_bed
heater_temp: 20
fan_speed: 0.6

#[heater_fan Nevermore]
#pin: PA4
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 0.5
#heater: heater_bed
#heater_temp: 60
#fan_speed: 0.9

#####################################################################
# 	LED Control
#####################################################################

#[output_pin chamber_leds]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PA3
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#[neopixel sb_leds]
#pin: sb2040:gpio12          
#chain_count: 3              
#color_order: GRBW           
#initial_RED: 0.4            
#initial_GREEN: 0.8          
#initial_BLUE: 1              
#initial_WHITE: 0.0 



 

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position: 175,175 #[your x-axis center coordinate], [your y-axis center coordinate]
# Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
z_hop: 10

#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:125,125
#speed:100
#z_hop:10

#[homing_override]
#axes: xyz
#gcode:
#  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
#
#  {% if home_all or 'X' in params %}
#    _HOME_X
#  {% endif %}
#  
#  {% if home_all or 'Y' in params %}
#    _HOME_Y
#  {% endif %}
#  
#  {% if home_all or 'Z' in params %}
#    G28 Z
#    G1 Z10
#  {% endif %}

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50, 50 #50,25
   50,325 #50,275
   300,325 #300,275
   300,50 #300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
#relative_reference_index: 12 # Update when changing probe_count, to ((x points * y points) - 1) / 2.

#####################################################################
# 	Probe
#####################################################################

[cartographer]
canbus_uuid: 259dda890348
#serial:
#   Path to the serial port for the Cartographer device. Typically has the form
#   /dev/serial/by-id/usb-cartographer_cartographer_...
#   
#   If you are using the CAN Bus version, replace serial: with canbus_uuid: and add the UUID.
#   Example: canbus_uuid: 1283as878a9sd
#
speed: 40.
#   Z probing dive speed.
lift_speed: 5.
#   Z probing lift speed.
backlash_comp: 0.000021 #0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 0.
#   X offset of cartographer from the nozzle.
y_offset: 21.1
#   Y offset of cartographer from the nozzle.
trigger_distance: 2.
#   cartographer trigger distance for homing.
trigger_dive_threshold: 1.5
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
cal_floor: 0.1
#   Minimum z bound on sensor response measurement.
cal_ceil:5.
#   Maximum z bound on sensor response measurement.
cal_speed: 1.0
#   Speed while measuring response curve.
cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
default_model_name: default
#   Name of default cartographer model to load.
mesh_main_direction: x
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
mesh_runs: 2
#   Number of passes to make during mesh scan.

#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X125 Y125 Z30 F3600
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed

[gcode_macro PROBE_CALIBRATE]
gcode:
    CARTOGRAPHER_CALIBRATE

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament

    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [cartographer model default]
#*# model_coef = 1.4317748567889463,
#*# 	  1.7364220586852013,
#*# 	  0.6700050758986225,
#*# 	  0.34170503470858943,
#*# 	  0.4076437835301138,
#*# 	  0.5008375607186012,
#*# 	  -0.29639766982990157,
#*# 	  -0.44656112638894085,
#*# 	  0.3360624865167302,
#*# 	  0.3181800905083184
#*# model_domain = 3.0875118316050217e-07,3.3625975971516034e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 25.060912
#*# model_offset = 0.00000
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 34.500
#*# pid_ki = 1.217
#*# pid_kd = 244.517
